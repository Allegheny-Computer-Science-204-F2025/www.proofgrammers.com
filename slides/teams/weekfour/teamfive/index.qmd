---
title: "Prove startsWithZ is Uncomputable"
description: "Create a proof that shows startsWithZ is uncomputable"
date: "2025-09-16"
date-format: long
author: Joseph Oforkansi, Aidan Dyga, Preston Smith
execute:
  echo: true
format:
  live-revealjs:
    completion: true
    theme: default
    css: ../../../css/styles.css
    history: false
    scrollable: true
    transition: slide
    highlight-style: github
    footer: "Proofgrammers"
---

---
## Introduction

::: {.fragment}
  - **Definition:** `startsWithZ(P, I)` determines if the output of a program starts with "Z".
  - **Goal:** Prove that `startsWithZ(P, I)` is uncomputable.
  - **Motivation:** Simple-looking questions about program behavior can be as hard as the Halting Problem, showing the limits of computation.
  - **Real-World Connection:** This reflects why compilers, program analyzers, and AI systems cannot perfectly predict every program’s output.
  - **Roadmap:** We’ll define the problem, build related functions, and prove uncomputability by contradiction.
:::
---

## What is startsWithZ?

::: {.fragment}
```text
startsWithZ(P, I) = {
    "yes"  if P is a valid program, P(I) is defined, and P(I) starts with "Z"
    "no"   otherwise
}
```
- **Examples:**
    - startsWithZ("print('Zebra')", "") → "yes"
    - startsWithZ("print('Banana')", "") → "no"
    - startsWithZ("print('Apple')", "") → "no"
:::

## Building startsWithZ

```{pyodide}
#| autorun: true
#| max-lines: 10
def startsWithZ()
    x
```

::: {.fragment}
  - **x:** x
:::

## Building notStartsWithZ

```{pyodide}
#| autorun: true
#| max-lines: 13
# x
```

::: {.fragment}
  - **x:** x
:::

## Proof By Contradiction

why is this problem uncomputable, proof it by contradiction. 

## What Can We Still Do

::: {.fragment}
  - **Options:** While perfect analysis is impossible, we can still build practical tools to address many cases:
    - **Static Analysis:** Identifies bugs and unreachable code without running the program.
    - **Dynamic Analysis:** Identifies bugs and unreachable code by running the program.
:::

## Conclusion

::: {.fragment}
  - **Uncomputable:** This problem is uncomputable once again as it comes down to the halting problem. 
  - If you where to have **Troublemaker Program (notStartsWithZ)** where it has an output with Z if the program it was giving didn't then you can't say for sure what it will return because if it should start with Z then it wont and vice versa.  
  - This creates a **Contradiction** both can not be true. If you where to run **startsWithZ** on **notStartsWithZ** if it returns true then **notStartsWithZ** returns false guaranteeing that it will always be incorrect in it's prediction making this an incomputable problem
:::

## Sources

::: {.fragment}
  - Course Textbook
  - GitHub Copilot
  - Microsoft Copilot
:::
